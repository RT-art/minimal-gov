This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
main.tf
outputs.tf
README.md
variables.tf
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="main.tf">
data "aws_caller_identity" "current" {}
data "aws_region" "current" {}

########################
# GuardDuty（全機能 ON、全アカウント強制適用）
########################

resource "aws_guardduty_detector" "this" {
  enable = true
}

resource "aws_guardduty_organization_configuration" "this" {
  detector_id                      = aws_guardduty_detector.this.id
  auto_enable_organization_members = "ALL" # 既存/新規すべて有効化
}

# 必要な機能を個別に有効化
resource "aws_guardduty_organization_configuration_feature" "s3_data_events" {
  detector_id = aws_guardduty_detector.this.id
  name        = "S3_DATA_EVENTS"
  auto_enable = "ALL"
}
resource "aws_guardduty_organization_configuration_feature" "rds_login_events" {
  detector_id = aws_guardduty_detector.this.id
  name        = "RDS_LOGIN_EVENTS"
  auto_enable = "ALL"
}

########################
# Security Hub（Central Config + Findings 集約）
########################

resource "aws_securityhub_account" "this" {}

resource "aws_securityhub_organization_configuration" "central" {
  organization_configuration {
    configuration_type = "CENTRAL" # Delegated Adminのメンバーアカウントでのみ有効
  }
  auto_enable           = false
  auto_enable_standards = "NONE"
  depends_on            = [aws_securityhub_account.this]
}

resource "aws_securityhub_standards_subscription" "fsbp" {
  standards_arn = "arn:aws:securityhub:${data.aws_region.current.name}::standards/aws-foundational-security-best-practices/v/1.0.0"
  depends_on    = [aws_securityhub_account.this]
}
resource "aws_securityhub_standards_subscription" "cis" {
  standards_arn = "arn:aws:securityhub:::standards/cis-aws-foundations-benchmark/v/1.4.0"
  depends_on    = [aws_securityhub_account.this]
}

resource "aws_securityhub_finding_aggregator" "this" {
  linking_mode = "ALL_REGIONS"
}

########################
# AWS Config Aggregator（Organizations 全体を集約）
########################

resource "aws_config_configuration_aggregator" "org" {
  name = "org-aggregator"

  organization_aggregation_source {
    role_arn    = "arn:aws:iam::${var.org_management_account_id}:role/AWSConfigAggregatorRole"
    all_regions = true
  }
}

########################
# CloudTrail（Organization Trail + SSE-KMS 暗号化）
########################

# KMS
resource "aws_kms_key" "cloudtrail" {
  description             = "KMS key for CloudTrail organization trail"
  enable_key_rotation     = true
  deletion_window_in_days = 30

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Sid       = "Enable IAM User Permissions",
        Effect    = "Allow",
        Principal = { AWS = "arn:aws:iam::${data.aws_caller_identity.current.account_id}:root" },
        Action    = "kms:*",
        Resource  = "*"
      },
      # CloudTrail からの暗号化キー生成/参照
      {
        Sid       = "Allow CloudTrail to use the key",
        Effect    = "Allow",
        Principal = { Service = "cloudtrail.amazonaws.com" },
        Action    = ["kms:GenerateDataKey*", "kms:DescribeKey"],
        Resource  = "*",
        Condition = {
          StringLike = {
            "kms:EncryptionContext:aws:cloudtrail:arn" = "arn:aws:cloudtrail:*:${data.aws_caller_identity.current.account_id}:trail/*"
          }
        }
      },
      # 同アカウント内の復号（閲覧用）
      {
        Sid       = "Allow Decrypt for CloudTrail logs reader in this account",
        Effect    = "Allow",
        Principal = { AWS = "arn:aws:iam::${data.aws_caller_identity.current.account_id}:root" },
        Action    = ["kms:Decrypt", "kms:ReEncrypt*"],
        Resource  = "*",
        Condition = {
          StringEquals = {
            "kms:CallerAccount" = data.aws_caller_identity.current.account_id
          },
          StringLike = {
            "kms:EncryptionContext:aws:cloudtrail:arn" = "arn:aws:cloudtrail:*:${data.aws_caller_identity.current.account_id}:trail/*"
          }
        }
      }
    ]
  })
}

resource "aws_kms_alias" "cloudtrail" {
  name          = "alias/cloudtrail"
  target_key_id = aws_kms_key.cloudtrail.key_id
}

# S3（ログ置き場）
resource "aws_s3_bucket" "cloudtrail" {
  bucket = "org-cloudtrail-logs-${data.aws_caller_identity.current.account_id}"
  tags   = var.tags
}

resource "aws_s3_bucket_server_side_encryption_configuration" "cloudtrail" {
  bucket = aws_s3_bucket.cloudtrail.id
  rule {
    apply_server_side_encryption_by_default {
      sse_algorithm     = "aws:kms"
      kms_master_key_id = aws_kms_key.cloudtrail.arn
    }
  }
}

resource "aws_s3_bucket_versioning" "cloudtrail" {
  bucket = aws_s3_bucket.cloudtrail.id
  versioning_configuration { status = "Enabled" }
}

resource "aws_s3_bucket_public_access_block" "cloudtrail" {
  bucket                  = aws_s3_bucket.cloudtrail.id
  block_public_acls       = true
  block_public_policy     = true
  ignore_public_acls      = true
  restrict_public_buckets = true
}

resource "aws_s3_bucket_policy" "cloudtrail" {
  bucket = aws_s3_bucket.cloudtrail.id
  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Sid       = "AWSCloudTrailAclCheck",
        Effect    = "Allow",
        Principal = { Service = "cloudtrail.amazonaws.com" },
        Action    = "s3:GetBucketAcl",
        Resource  = aws_s3_bucket.cloudtrail.arn
      },
      {
        Sid       = "AWSCloudTrailWrite",
        Effect    = "Allow",
        Principal = { Service = "cloudtrail.amazonaws.com" },
        Action    = "s3:PutObject",
        Resource  = "${aws_s3_bucket.cloudtrail.arn}/cloudtrail/AWSLogs/*",
        Condition = {
          StringEquals = { "s3:x-amz-acl" = "bucket-owner-full-control" }
        }
      }
    ]
  })
}

resource "aws_cloudtrail" "org" {
  name                          = "org-cloudtrail"
  s3_bucket_name                = aws_s3_bucket.cloudtrail.bucket
  s3_key_prefix                 = "cloudtrail"
  enable_log_file_validation    = true
  include_global_service_events = true
  is_multi_region_trail         = true
  is_organization_trail         = true
  kms_key_id                    = aws_kms_key.cloudtrail.arn
  tags                          = var.tags

  depends_on = [aws_s3_bucket_policy.cloudtrail]
}
</file>

<file path="outputs.tf">
output "guardduty_detector_id" {
  value       = aws_guardduty_detector.this.id
  description = "GuardDuty detector ID"
}

output "securityhub_finding_aggregator_arn" {
  value       = aws_securityhub_finding_aggregator.this.arn
  description = "Security Hub finding aggregator ARN"
}

output "config_aggregator_id" {
  value       = aws_config_configuration_aggregator.org.id
  description = "Config aggregator ID"
}

output "cloudtrail_trail_arn" {
  value       = aws_cloudtrail.org.arn
  description = "Organization trail ARN"
}
</file>

<file path="README.md">
# central-security (Security account)

セキュリティアカウント（委任管理者）で以下を構成するモジュール：

- **GuardDuty**: 検出器、組織設定（自動有効化/機能ON）
- **Security Hub**: Central Configuration を有効化、任意でスタンダード購読、所見集約
- **AWS Config**: 組織アグリゲータ
- **CloudTrail**: 組織トレイル + S3/KMS（最小ポリシー）

> 事前条件
>
> - 管理アカウント側で各サービスの *サービス固有の委任管理者* を登録済みであること（GuardDuty/Security Hub/CloudTrail）。
>
> 使い方（例）
>
> ```hcl
> provider "aws" {
>   alias  = "security"
>   region = "ap-northeast-1"
>   assume_role {
>     role_arn = "arn:aws:iam::<SECURITY_ACCOUNT_ID>:role/OrganizationAccountAccessRole"
>   }
> }
>
> module "central_security" {
>   source = "../modules/central-security"
>   providers = { aws = aws.security }
>
>   tags = {
>     Project = "minimal-gov"
>   }
>
  tags = {
    Project = "minimal-gov"
  }

}
> ```
>
> ※ Security Hub のスタンダードやコントロールを OU/アカウント単位で一元管理したい場合は、Central Config + **Configuration Policy** の適用（別途）を推奨。
</file>

<file path="variables.tf">
variable "org_management_account_id" {
  description = "AWS Organizations の管理アカウント ID"
  type        = string
}

variable "tags" {
  type    = map(string)
  default = {}
}
</file>

</files>
